{"version":3,"file":"static/js/287.681311a9.chunk.js","mappings":"mPAOOA,IAAAA,KAAOC,QAAQC,UAAUC,YAEhCH,IAAAA,KAAOC,QAAQG,aAAa,CAC1BC,cAAeC,EAAQ,MACvBC,QAASD,EAAQ,MACjBE,UAAWF,EAAQ,QAGrB,MA8BA,EA9BcG,IAAsC,IAArC,SAAEC,EAAQ,iBAAGC,GAAkBF,EAE5C,MAAMG,EAAY,CAACD,EAAkBD,GAErC,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,OAAQR,EAAUS,KAAM,GAAIL,UAAU,oBAAmBC,SAAA,EACrEF,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACRC,IAAI,qDACJC,YAAY,2FAEdT,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACb,SAAUA,EAASK,UACzBF,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAAAT,UACJC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,kCAA6BL,EAAS,GAAGe,QAAQ,GAAG,KAAGf,EAAS,GAAGe,QAAQ,WAIrFZ,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACb,SAAUC,EAAiBI,UACjCF,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAAAT,UACJC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,4CAAuCJ,EAAiB,GAAGc,QAAQ,GAAG,KAAGd,EAAiB,GAAGc,QAAQ,WAK/GZ,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CAACd,UAAWA,EAAWe,MAAM,aAEpC,ECMV,EA1CqBlB,IAAsB,IAArB,YAAEmB,GAAanB,EACjC,MAAMC,EAAW,CAAC,SAAU,OACrBmB,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,OACxCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAmBnC,OAjBAG,EAAAA,EAAAA,YAAU,KACN,IAAKC,UAAUC,YAEX,YADAH,EAAS,mEAYbE,UAAUC,YAAYC,oBARG3B,IACrBoB,EAAe,CAACpB,EAAS4B,OAAOC,SAAU7B,EAAS4B,OAAOE,WAAW,IAGlDR,IACnBC,EAASD,EAAMS,QAAQ,GAG6C,GACzE,KAGDzB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,WAASF,UAAU,iCAAgCC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+EACFiB,IAAShB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,WAASiB,QAIvBH,GAAenB,GACdG,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAA3B,UACEF,EAAAA,EAAAA,KAAC8B,EAAK,CAACjC,SAAUA,EAAUC,iBAAkBkB,OAG/ChB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0CAED,C","sources":["components/composents/Carte.jsx","components/article/Localisation.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport \"../../styles/composents/Carte.css\";\r\n\r\n// Icone personnalisée pour le marqueur\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\nconst Carte = ({ position , positionAppareil }) => {\r\n  // Coordonnées pour la polyline\r\n  const positions = [positionAppareil, position];\r\n\r\n  return (\r\n    <div className=\"carte-container\">\r\n      <MapContainer center={position} zoom={13} className=\"leaflet-container\">\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            <span>J'Habite ici. Coordonnées : {position[0].toFixed(4)}, {position[1].toFixed(4)}</span>\r\n          </Popup>\r\n        </Marker>\r\n\r\n        <Marker position={positionAppareil}>\r\n          <Popup>\r\n            <span>Position de l'appareil. Coordonnées : {positionAppareil[0].toFixed(4)}, {positionAppareil[1].toFixed(4)}</span>\r\n          </Popup>\r\n        </Marker>\r\n\r\n        {/* Dessin du trajet entre les deux points */}\r\n        <Polyline positions={positions} color=\"blue\" />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carte;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Carte from \"../composents/Carte\";\r\n\r\nimport \"../../styles/article/Localisation.css\";\r\n\r\nconst Localisation = ({ closeSquare }) => {\r\n    const position = [49.2861, -0.5950]; // Position fixe\r\n    const [posAppareil, setPosAppareil] = useState(null); // Position obtenue via la géolocalisation\r\n    const [error, setError] = useState(null); // Pour gérer les erreurs\r\n\r\n    useEffect(() => {\r\n        if (!navigator.geolocation) {\r\n            setError(\"La géolocalisation n'est pas supportée par ce navigateur.\");\r\n            return;\r\n        }\r\n\r\n        const successCallback = (position) => {\r\n            setPosAppareil([position.coords.latitude, position.coords.longitude]);\r\n        };\r\n\r\n        const errorCallback = (error) => {\r\n            setError(error.message);\r\n        };\r\n\r\n        navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\r\n    }, []);\r\n\r\n    return (\r\n      <div className=\"localisation-container\">\r\n        <section className=\"intro-section text-center py-5\">\r\n          <h1>Ma localisation</h1>\r\n          <p>Découvrez ma position géographique actuelle sur la carte ci-dessous.</p>\r\n          {error && <p>Erreur: {error}</p>}\r\n        </section>\r\n\r\n        {/* Attente de la disponibilité des deux positions avant d'afficher la carte */}\r\n        {posAppareil && position ? (\r\n          <>\r\n            <Carte position={position} positionAppareil={posAppareil} />\r\n          </>\r\n        ) : (\r\n          <p>Obtention des positions en cours...</p>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Localisation;\r\n"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","_ref","position","positionAppareil","positions","_jsx","className","children","_jsxs","MapContainer","center","zoom","TileLayer","url","attribution","Marker","Popup","toFixed","Polyline","color","closeSquare","posAppareil","setPosAppareil","useState","error","setError","useEffect","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","message","_Fragment","Carte"],"sourceRoot":""}